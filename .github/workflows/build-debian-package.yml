name: Build Debian Package

on:
  workflow_run:
    workflows: ["Weekly Docker RISC-V64 Build", "Track Moby Releases"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to build package from'
        required: true
        default: 'v28.5.1-riscv64'

jobs:
  build-deb:
    runs-on: [self-hosted, riscv64]
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y debhelper dh-make dpkg-dev lintian

      - name: Download release binaries
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get release tag from workflow_run or manual input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            # Find the latest docker release created by the workflow
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          grep -v '^compose-' | grep -v '^cli-' | \
                          head -1 | \
                          awk '{print $1}')
          fi

          echo "Building package for release: $RELEASE_TAG"

          # Download all binaries
          for binary in dockerd docker-proxy containerd containerd-shim-runc-v2 runc; do
            gh release download $RELEASE_TAG -p $binary
          done

          chmod +x *
          ls -lh

      - name: Update package version in changelog
        run: |
          # Get release tag (same logic as download step)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          grep -v '^compose-' | grep -v '^cli-' | \
                          head -1 | \
                          awk '{print $1}')
          fi
          # Extract version from tag (v28.5.1-riscv64 -> 28.5.1)
          VERSION=$(echo $RELEASE_TAG | sed 's/^v//; s/-riscv64$//')

          # Get moby commit info for changelog
          cd moby 2>/dev/null || true
          MOBY_COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
          cd ..

          # Check if this version is already in changelog
          if ! head -1 debian/changelog | grep -q "$VERSION"; then
            echo "Version $VERSION not in changelog, needs update"
            # In production, use dch to add entry, but changelog should be pre-updated
          fi

          echo "Package version: $VERSION"
          echo "Moby commit: $MOBY_COMMIT"

      - name: Build package
        run: |
          dpkg-buildpackage -us -uc -b

      - name: Run lintian checks
        run: |
          lintian --info --display-info ../*.deb || true

      - name: Package info
        run: |
          for deb in ../*.deb; do
            echo "============================================"
            echo "=== Package: $(basename $deb) ==="
            echo "============================================"
            echo ""
            echo "=== Package Contents (first 30 files) ==="
            dpkg-deb --contents "$deb" | head -30
            echo ""
            echo "=== Package Info ==="
            dpkg-deb --info "$deb"
            echo ""
            echo "=== Package Size ==="
            ls -lh "$deb"
            echo ""
          done

      - name: Upload packages to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get release tag (same logic as download step)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          grep -v '^compose-' | grep -v '^cli-' | \
                          head -1 | \
                          awk '{print $1}')
          fi

          echo "Uploading packages to release $RELEASE_TAG"
          echo ""

          for deb in ../*.deb; do
            echo "Uploading $(basename $deb)..."
            gh release upload $RELEASE_TAG "$deb" --clobber
          done

          echo ""
          echo "âœ… All Debian packages uploaded successfully!"
          echo ""
          echo "Packages built:"
          ls -lh ../*.deb
          echo ""
          echo "Install with:"
          echo "  # Download all packages"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/docker.io_*_riscv64.deb"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/containerd_*_riscv64.deb"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/runc_*_riscv64.deb"
          echo ""
          echo "  # Install in dependency order"
          echo "  sudo dpkg -i runc_*_riscv64.deb"
          echo "  sudo dpkg -i containerd_*_riscv64.deb"
          echo "  sudo dpkg -i docker.io_*_riscv64.deb"
          echo "  sudo apt-get install -f"
