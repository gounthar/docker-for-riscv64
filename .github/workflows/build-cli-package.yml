name: Build Docker CLI Debian Package

on:
  workflow_run:
    workflows: ["Weekly Docker CLI RISC-V64 Build"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'CLI release tag'
        required: true
        default: 'cli-v28.5.1-riscv64'

permissions:
  contents: write

jobs:
  build-deb:
    runs-on: [self-hosted, riscv64]
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y debhelper dh-make dpkg-dev lintian devscripts libdistro-info-perl
          if ! command -v gh >/dev/null 2>&1; then
            sudo apt-get install -y gh || true
          fi

      - name: Download CLI binary
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          # Get release tag from workflow_run or manual input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            # Find the latest CLI release created by the workflow
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^cli-v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          head -1 | \
                          awk '{print $1}')
          fi
          echo "Building package for release: $RELEASE_TAG"

          # Download binary
          gh release download $RELEASE_TAG -p docker
          chmod +x docker

          # Verify binary architecture
          file ./docker || true
          readelf -h ./docker 2>/dev/null | sed -n '1,5p' || true
          ./docker --version || echo "Version command not available yet"

          ls -lh docker

      - name: Update package version in changelog
        run: |
          set -euo pipefail
          # Get release tag from workflow_run or manual input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            # Find the latest CLI release created by the workflow
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^cli-v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          head -1 | \
                          awk '{print $1}')
          fi
          VERSION="$(echo "$RELEASE_TAG" | sed 's/^cli-v//; s/-riscv64$//')"
          echo "Package version: $VERSION"

          # Set DEBEMAIL to avoid interactive prompt
          export DEBEMAIL="github-actions[bot]@users.noreply.github.com"
          export DEBFULLNAME="GitHub Actions"

          # Copy packaging and update changelog with dch
          cp -r debian-cli debian
          dch --chdir debian \
              --newversion "${VERSION}-riscv64-1" \
              --distribution trixie \
              --force-distribution \
              --check-dirname-level 0 \
              "RISC-V64 prebuilt docker-cli ${VERSION}"

      - name: Build package
        run: |
          # Build package (debian/ already created in previous step)
          dpkg-buildpackage -us -uc -b

          ls -lh ../*.deb

      - name: Run lintian checks
        run: |
          lintian --info --display-info ../*.deb || true

      - name: Package info
        run: |
          for deb in ../*.deb; do
            echo "============================================"
            echo "=== Package: $(basename $deb) ==="
            echo "============================================"
            echo ""
            echo "=== Package Contents ==="
            dpkg-deb --contents "$deb" | head -50
            echo ""
            echo "=== Package Info ==="
            dpkg-deb --info "$deb"
            echo ""
            echo "=== Package Size ==="
            ls -lh "$deb"
            echo ""
          done

      - name: Upload packages to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          # Get release tag from workflow_run or manual input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            # Find the latest CLI release created by the workflow
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^cli-v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          head -1 | \
                          awk '{print $1}')
          fi

          echo "Uploading packages to release $RELEASE_TAG"
          echo ""

          for deb in ../*.deb; do
            echo "Uploading $(basename $deb)..."
            for i in {1..3}; do
              gh release upload "$RELEASE_TAG" "$deb" --clobber && break
              echo "Retry $i..."
              sleep 3
            done
          done

          echo ""
          echo "âœ… Docker CLI Debian package uploaded successfully!"
          echo ""
          echo "Packages built:"
          ls -lh ../*.deb
          echo ""
          echo "Install with:"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/docker-cli_*.deb"
          echo "  sudo dpkg -i docker-cli_*.deb"
          echo "  docker --version"
