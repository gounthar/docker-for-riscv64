name: Build RPM Package

on:
  workflow_run:
    workflows: ["Weekly Docker RISC-V64 Build", "Track Moby Releases"]
    types: [completed]
    branches: [main]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to build package from'
        required: true
        default: 'v28.5.1-riscv64'

jobs:
  build-rpm:
    runs-on: [self-hosted, riscv64]
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          # Check if running on Fedora or Debian
          if [ -f /etc/fedora-release ]; then
            sudo dnf install -y rpm-build rpmdevtools rpmlint createrepo_c
          elif [ -f /etc/debian_version ]; then
            sudo apt-get update
            sudo apt-get install -y rpm rpmlint createrepo-c
          else
            echo "Unsupported distribution"
            exit 1
          fi

      - name: Set up RPM build tree
        run: |
          rpmdev-setuptree || mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}

      - name: Download release binaries
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get release tag from workflow_run or manual input
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            RELEASE_TAG="${{ github.event.inputs.release_tag }}"
          else
            # Find the latest docker release created by the workflow
            RELEASE_TAG=$(gh release list --repo gounthar/docker-for-riscv64 --limit 10 | \
                          grep -E '^v[0-9]+\.[0-9]+\.[0-9]+-riscv64' | \
                          grep -v '^compose-' | grep -v '^cli-' | \
                          head -1 | \
                          awk '{print $1}')
          fi

          echo "Building package for release: $RELEASE_TAG"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

          # Download all binaries to SOURCES directory
          cd ~/rpmbuild/SOURCES
          for binary in dockerd docker-proxy containerd containerd-shim-runc-v2 runc; do
            gh release download $RELEASE_TAG -p $binary --repo gounthar/docker-for-riscv64
          done

          chmod +x *
          ls -lh

      - name: Copy spec files and sources
        run: |
          # Copy systemd unit files to SOURCES
          cp rpm-docker/docker.service ~/rpmbuild/SOURCES/
          cp rpm-docker/docker.socket ~/rpmbuild/SOURCES/
          cp rpm-containerd/containerd.service ~/rpmbuild/SOURCES/

          # Copy spec files to SPECS
          cp rpm-docker/moby-engine.spec ~/rpmbuild/SPECS/
          cp rpm-containerd/containerd.spec ~/rpmbuild/SPECS/
          cp rpm-runc/runc.spec ~/rpmbuild/SPECS/

      - name: Update package versions
        run: |
          # Extract version from tag (v28.5.1-riscv64 -> 28.5.1)
          VERSION=$(echo $RELEASE_TAG | sed 's/^v//; s/-riscv64$//')
          echo "Package version: $VERSION"

          # Update moby-engine version
          sed -i "s/^Version:.*/Version:        $VERSION/" ~/rpmbuild/SPECS/moby-engine.spec

      - name: Build RPM packages
        run: |
          # Build each package
          cd ~/rpmbuild/SPECS

          echo "Building runc..."
          rpmbuild -bb runc.spec

          echo "Building containerd..."
          rpmbuild -bb containerd.spec

          echo "Building moby-engine..."
          rpmbuild -bb moby-engine.spec

          # List built packages
          echo ""
          echo "Built RPM packages:"
          ls -lh ~/rpmbuild/RPMS/riscv64/

      - name: Run rpmlint checks
        run: |
          rpmlint ~/rpmbuild/RPMS/riscv64/*.rpm || true

      - name: Package info
        run: |
          for rpm in ~/rpmbuild/RPMS/riscv64/*.rpm; do
            echo "============================================"
            echo "=== Package: $(basename $rpm) ==="
            echo "============================================"
            echo ""
            echo "=== Package Info ==="
            rpm -qip "$rpm"
            echo ""
            echo "=== Package Contents ==="
            rpm -qlp "$rpm"
            echo ""
            echo "=== Package Size ==="
            ls -lh "$rpm"
            echo ""
          done

      - name: Upload packages to release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Uploading packages to release $RELEASE_TAG"
          echo ""

          for rpm in ~/rpmbuild/RPMS/riscv64/*.rpm; do
            echo "Uploading $(basename $rpm)..."
            gh release upload $RELEASE_TAG "$rpm" --repo gounthar/docker-for-riscv64 --clobber
          done

          echo ""
          echo "âœ… All RPM packages uploaded successfully!"
          echo ""
          echo "Packages built:"
          ls -lh ~/rpmbuild/RPMS/riscv64/
          echo ""
          echo "Install with:"
          echo "  # Download all packages"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/runc-*.riscv64.rpm"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/containerd-*.riscv64.rpm"
          echo "  wget https://github.com/gounthar/docker-for-riscv64/releases/download/${RELEASE_TAG}/moby-engine-*.riscv64.rpm"
          echo ""
          echo "  # Install in dependency order"
          echo "  sudo dnf install -y runc-*.riscv64.rpm"
          echo "  sudo dnf install -y containerd-*.riscv64.rpm"
          echo "  sudo dnf install -y moby-engine-*.riscv64.rpm"
